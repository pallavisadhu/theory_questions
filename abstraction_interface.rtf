{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Difference between abstraction and interface?\
\
Abstraction:\
1. If a class is declared with an abstract is called an abstract class.\
2. An abstract class can have both abstract and concrete methods.\
3. An abstract class should be extended and all the abstract methods in the abstract class should be implemented.\
4. An abstract class can have class members like public, private, and protected.\
5. Partial abstraction can be achieved.\
6. Abstract class can have final, non-final, static and non-static variables.\
7. It doesn\'92t support multiple inheritances.\
Syntax:\
Abstract class classname\{\
Public Abstract void methodname()\{\
\}\
\}\
\
Interface:\
1. An interface is just like a class. An interface is defined with an interface keyword.\
2. An interface contains only abstract methods.\
3. An interface should be implemented.\
4. An interface can have public members only.\
5. 100% abstraction can be achieved.\
6. Interface can have only final member variables.\
7. It supports multiple inheritances.\
Syntax:\
Public Interface interfacename\{\
Void methodname()\{\
\}\}\
}